{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Explore Personalization",
    "termsOfService": "https://www.telefonica.es/es/",
    "contact": {
      "name": "4th Platform Team",
      "email": "4pf@tid.es"
    },
    "description": "Allows content hosted on Explore CMS to be personalized for the user.\n\n# Relevant Definitions and concepts\n\n- **Explore CMS**: Manages the creation and modification of Explore content.\n- **Microsegment**: A more advanced form of market segmentation that groups a number of customers of the business into specific segments based on various factors including behavioral predictions. Once identified, microsegments can become the focus of personalized direct micromarketing campaigns, each campaign is meant to target and appeal to the specified tastes, needs, wants, and desires of the small groups and individuals that make up the microsegment. The goal of microsegments is to determine, which marketing actions will have the most impact on each set of customers.\n- **User Friendly Field**:  Some string params in the API are described as User Friendly, meaning that information should be an string directly understandable by a human. Params marked this way may be used for display purposes.\n\n# API Functionality\n\nExplore provides access to tailored and exclusive services, offers, promotions, and devices. This content can be provided through the **Explore CMS**, which offers segmentation by platform and payment model.\n\nAn Operating Business may choose to personalize this content, targeting smaller groups of users (microsegments) to optimize marketing actions. In this case, the steps needed to obtain the Explore content would be as follows:\n\n1. **Get the contents** from Explore CMS. These contents have already been tagged with the microsegments for which they apply.\n1. **Get the microsegments** for the user or phone number.\n1. **Filter the contents** using the microsegments to which the user belongs.\n\nThese are the main use cases covered by this API:\n\n- Retrieve the microsegment(s) to which a user or phone-number belongs.\n- Tag the content in the Explore CMS to target one or more microsegments.\n\nPlease note that this API is intended to be used in conjunction with the **Explore CMS**. For a fully customized Explore experience with a third-party CMS, the Operating Business must implement the [Explore Content API](https://developers.baikalplatform.com/apis/explore-content/1.0.0/).\n\n# Resources and Operations overview\n\nThere are three resources in the API:\n\n- **microsegments for a user**, to retrieve the microsegments to which a particular user belongs.\n- **microsegments for a phone-number**, to retrieve the microsegments to which a given phone number belongs.\n- **microsegments**, to retrieve all the microsegments defined by the Operating Business.\n\n# Further Info and Support\n\nFind answers to Frequently Asked Questions in **https://qna.baikalplatform.com/c/api-faq**.\n\nTopics with the **tag 'explore-personalization'** are specific for Explore Personalization API."
  },
  "x-fp-apiPrefix": "/explore-personalization",
  "schemes": [
    "https"
  ],
  "host": "api.dev.telefonica.es",
  "basePath": "/explore-personalization/v1",
  "tags": [
    {
      "name": "microsegments",
      "description": "Operations to query microsegments."
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users/{user_id}/microsegments": {
      "get": {
        "tags": [
          "microsegments"
        ],
        "summary": "Retrieve the microsegments for a user.",
        "description": "Retrieve the microsegments to which the user belongs.",
        "operationId": "getUserMicrosegments",
        "x-fp-pi-scopes": [
          "explore-personalization-microsegments-user-read"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "x-correlator": {
                "type": "string",
                "description": "Correlation id for the different services"
              }
            },
            "schema": {
              "type": "array",
              "description": "List of microsegments",
              "items": {
                "$ref": "#/definitions/UserMicrosegment"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "011_discount_lovers",
                  "name": "Discount lovers",
                  "identifiers": [
                    "+34689452249"
                  ]
                },
                {
                  "id": "088_valuable_roamers",
                  "name": "Valuable Roamers",
                  "identifiers": [
                    "+34636043056"
                  ]
                }
              ]
            }
          },
          "400": {
            "description": "Problem with the client request",
            "headers": {
              "x-correlator": {
                "type": "string",
                "description": "Correlation id for the different services"
              }
            },
            "schema": {
              "$ref": "https://docs.baikalplatform.com/errors/v2.0/errors.json#/definitions/InvalidArgument"
            },
            "examples": {
              "application/json": {
                "code": "INVALID_ARGUMENT",
                "message": "Client specified an invalid argument, request body or query param"
              }
            }
          },
          "403": {
            "description": "Client does not have sufficient permission",
            "headers": {
              "x-correlator": {
                "type": "string",
                "description": "Correlation id for the different services"
              }
            },
            "schema": {
              "$ref": "https://docs.baikalplatform.com/errors/v2.0/errors.json#/definitions/PermissionDenied"
            },
            "examples": {
              "application/json": {
                "code": "PERMISSION_DENIED",
                "message": "Authenticated user has no permission to access the requested resource"
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "headers": {
              "x-correlator": {
                "type": "string",
                "description": "Correlation id for the different services"
              }
            },
            "schema": {
              "$ref": "https://docs.baikalplatform.com/errors/v2.0/errors.json#/definitions/NotFound"
            },
            "examples": {
              "application/json": {
                "code": "NOT_FOUND",
                "message": "A specified resource is not found"
              }
            }
          },
          "500": {
            "description": "Server error",
            "headers": {
              "x-correlator": {
                "type": "string",
                "description": "Correlation id for the different services"
              }
            },
            "schema": {
              "$ref": "https://docs.baikalplatform.com/errors/v2.0/errors.json#/definitions/Internal"
            },
            "examples": {
              "application/json": {
                "code": "INTERNAL",
                "message": "Server error"
              }
            }
          },
          "504": {
            "description": "Request timeout exceeded. If it happens repeatedly, consider reducing the request complexity",
            "headers": {
              "x-correlator": {
                "type": "string",
                "description": "Correlation id for the different services"
              }
            },
            "schema": {
              "$ref": "https://docs.baikalplatform.com/errors/v2.0/errors.json#/definitions/Timeout"
            },
            "examples": {
              "application/json": {
                "code": "TIMEOUT",
                "message": "Request timeout exceeded. Try it later"
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/phone-numbers/{phone_number}/microsegments": {
      "get": {
        "tags": [
          "microsegments"
        ],
        "operationId": "getPhoneNumberMicrosegments",
        "summary": "Retrieve the microsegments for a phone number.",
        "description": "Retrieve the microsegments to which the phone number belongs.",
        "x-fp-pi-scopes": [
          "explore-personalization-microsegments-phone-number-read"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "$ref": "#/parameters/PhoneNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "x-correlator": {
                "type": "string",
                "description": "Correlation id for the different services"
              }
            },
            "schema": {
              "type": "array",
              "description": "List of microsegments",
              "items": {
                "$ref": "#/definitions/UserMicrosegment"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "042_frequent_buyers",
                  "name": "Frequent Buyers",
                  "identifiers": [
                    "+34636043057"
                  ]
                },
                {
                  "id": "088_valuable_roamers",
                  "name": "Valuable Roamers",
                  "identifiers": [
                    "+34636043057"
                  ]
                }
              ]
            }
          },
          "400": {
            "description": "Problem with the client request",
            "headers": {
              "x-correlator": {
                "type": "string",
                "description": "Correlation id for the different services"
              }
            },
            "schema": {
              "$ref": "https://docs.baikalplatform.com/errors/v2.0/errors.json#/definitions/InvalidArgument"
            },
            "examples": {
              "application/json": {
                "code": "INVALID_ARGUMENT",
                "message": "Client specified an invalid argument, request body or query param"
              }
            }
          },
          "403": {
            "description": "Client does not have sufficient permission",
            "headers": {
              "x-correlator": {
                "type": "string",
                "description": "Correlation id for the different services"
              }
            },
            "schema": {
              "$ref": "https://docs.baikalplatform.com/errors/v2.0/errors.json#/definitions/PermissionDenied"
            },
            "examples": {
              "application/json": {
                "code": "PERMISSION_DENIED",
                "message": "Authenticated user has no permission to access the requested resource"
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "headers": {
              "x-correlator": {
                "type": "string",
                "description": "Correlation id for the different services"
              }
            },
            "schema": {
              "$ref": "https://docs.baikalplatform.com/errors/v2.0/errors.json#/definitions/NotFound"
            },
            "examples": {
              "application/json": {
                "code": "NOT_FOUND",
                "message": "A specified resource is not found"
              }
            }
          },
          "500": {
            "description": "Server error",
            "headers": {
              "x-correlator": {
                "type": "string",
                "description": "Correlation id for the different services"
              }
            },
            "schema": {
              "$ref": "https://docs.baikalplatform.com/errors/v2.0/errors.json#/definitions/Internal"
            },
            "examples": {
              "application/json": {
                "code": "INTERNAL",
                "message": "Server error"
              }
            }
          },
          "504": {
            "description": "Request timeout exceeded. If it happens repeatedly, consider reducing the request complexity",
            "headers": {
              "x-correlator": {
                "type": "string",
                "description": "Correlation id for the different services"
              }
            },
            "schema": {
              "$ref": "https://docs.baikalplatform.com/errors/v2.0/errors.json#/definitions/Timeout"
            },
            "examples": {
              "application/json": {
                "code": "TIMEOUT",
                "message": "Request timeout exceeded. Try it later"
              }
            }
          }
        }
      }
    },
    "/microsegments": {
      "get": {
        "tags": [
          "microsegments"
        ],
        "operationId": "getMicrosegments",
        "summary": "Retrieve the microsegments defined by the Operating Business.",
        "description": "Retrieve all the microsegments defined by the Operating Business. This method is used to display the list of microsegments available in the Explore CMS.",
        "x-fp-scopes": [
          "microsegments:read"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "x-correlator": {
                "type": "string",
                "description": "Correlation id for the different services"
              }
            },
            "schema": {
              "type": "array",
              "description": "List of microsegments",
              "items": {
                "$ref": "#/definitions/Microsegment"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "001_coupon_responders",
                  "name": "Coupon Responders"
                },
                {
                  "id": "004_high_spend_in_devices",
                  "name": "High Spend in Devices"
                },
                {
                  "id": "011_discount_lovers",
                  "name": "Discount Lovers"
                },
                {
                  "id": "042_frequent_buyers",
                  "name": "Frequent Buyers"
                },
                {
                  "id": "039_abandoners",
                  "name": "Abandoners"
                },
                {
                  "id": "013_advance_planners",
                  "name": "Advance Planners"
                },
                {
                  "id": "088_valuable_roamers",
                  "name": "Valuable Roamers"
                }
              ]
            }
          },
          "403": {
            "description": "Client does not have sufficient permission",
            "headers": {
              "x-correlator": {
                "type": "string",
                "description": "Correlation id for the different services"
              }
            },
            "schema": {
              "$ref": "https://docs.baikalplatform.com/errors/v2.0/errors.json#/definitions/PermissionDenied"
            },
            "examples": {
              "application/json": {
                "code": "PERMISSION_DENIED",
                "message": "Authenticated user has no permission to access the requested resource"
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "headers": {
              "x-correlator": {
                "type": "string",
                "description": "Correlation id for the different services"
              }
            },
            "schema": {
              "$ref": "https://docs.baikalplatform.com/errors/v2.0/errors.json#/definitions/NotFound"
            },
            "examples": {
              "application/json": {
                "code": "NOT_FOUND",
                "message": "A specified resource is not found"
              }
            }
          },
          "500": {
            "description": "Server error",
            "headers": {
              "x-correlator": {
                "type": "string",
                "description": "Correlation id for the different services"
              }
            },
            "schema": {
              "$ref": "https://docs.baikalplatform.com/errors/v2.0/errors.json#/definitions/Internal"
            },
            "examples": {
              "application/json": {
                "code": "INTERNAL",
                "message": "Server error"
              }
            }
          },
          "504": {
            "description": "Request timeout exceeded. If it happens repeatedly, consider reducing the request complexity",
            "headers": {
              "x-correlator": {
                "type": "string",
                "description": "Correlation id for the different services"
              }
            },
            "schema": {
              "$ref": "https://docs.baikalplatform.com/errors/v2.0/errors.json#/definitions/Timeout"
            },
            "examples": {
              "application/json": {
                "code": "TIMEOUT",
                "message": "Request timeout exceeded. Try it later"
              }
            }
          }
        }
      }
    }
  },
  "x-fp-health": "http://explore-personalization:8080/healthz",
  "x-fp-scopesDefinition": {
    "microsegments:read": "Allows obtaining the microsegments defined by the Operating Business."
  },
  "definitions": {
    "Microsegment": {
      "type": "object",
      "description": "A microsegment",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the microsegment.",
          "example": "088_valuable_roamers"
        },
        "name": {
          "type": "string",
          "description": "A descriptive name for the microsegment. User Friendly Field.",
          "example": "Valuable Roamers"
        }
      }
    },
    "UserMicrosegment": {
      "type": "object",
      "description": "A microsegment applicable to a user",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the microsegment.",
          "example": "088_valuable_roamers"
        },
        "name": {
          "type": "string",
          "description": "A descriptive name for the microsegment. User Friendly Field",
          "example": "Valuable Roamers"
        },
        "identifiers": {
          "type": "array",
          "description": "List of user identifiers (e.g. phone_numbers) to which this microsegment applies. For microsegments at user level not related to any identifier, field is not returned, otherwise must be returned with list of identifiers of the user to which the microsegment applies.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "name"
      ]
    }
  },
  "parameters": {
    "UserId": {
      "name": "user_id",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "id of the user for which the methods apply. This value should be changed to the special keyword `me' to simplify calls when access using OAuth2 with three-legged authentication.",
      "x-fp-identifier": "user_id"
    },
    "PhoneNumber": {
      "name": "phone_number",
      "description": "The phone number from which we want to obtain the microsegments. E164 with + format.",
      "in": "path",
      "required": true,
      "type": "string",
      "x-fp-identifier": "phone_number"
    }
  }
}